#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt

on:
  release:
    types: published
  push:
    branches:
      - master
    paths-ignore:
      - 'LICENSE'
      - 'README.md'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/openwrt/openwrt.git
  FIRMWARE_URL: https://github.com/hksanduo/kirkwood-88F6281.git
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Clone source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        git clone --depth 1 $FIRMWARE_URL -b $REPO_BRANCH kirkwood
        rm -rf ./openwrt/target/linux/kirkwood/
        cp -rf kirkwood ./openwrt/target/linux/

    - name: add other sources
      run: echo "src-git lienol https://github.com/Lienol/openwrt-package" >> ./openwrt/feeds.conf.default

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: |
        cd openwrt && ./scripts/feeds install -a
        ./scripts/feeds install libpam libgnutls libopenldap libidn2 libssh2 libcap liblzma libnetsnmp jansson

    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make target/linux/clean V=s QUILT=1
        make target/linux/prepare V=s

    - name: SSH connection to Actions for custom configuration firmware
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) V=s IGNORE_ERRORS=1 || make -j99 V=s IGNORE_ERRORS=1
        echo "::set-output name=status::success"

    - name: SSH connection to Actions for custom configuration firmware
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Compile the firmware again
      id: compile_again
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) V=s IGNORE_ERRORS=1 || make -j99 V=s IGNORE_ERRORS=1
        echo "::set-output name=status::success"

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_directory
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}
